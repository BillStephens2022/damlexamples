module TestScripts where
import Daml.Script
import DA.Date
import Deal

testScript : Script ()
testScript = script do
  -- Define parties
    fundingSecuredBank <- allocateParty "FundingSecured Bank"
    starkIndustries <- allocateParty "Stark Industries"
    acmeBank <- allocateParty "Acme Bank"

  -- Create a CreditAgreement contract
    ca <- submitMulti [fundingSecuredBank, starkIndustries, acmeBank] [] do
        createCmd Deal with
            lender = fundingSecuredBank
            borrower = starkIndustries
            agent = acmeBank
            effectiveDate = date 2024 Jan 14
            globalDealCommitment = 100000000.00
            hostBankDealCommitment = 15000000.00
            dealStatus = Pending
            isAgent = True
            isSwinglineLender = False
            isLcIssuer = False
            facilities = []

       -- Create a Facility representing a Revolver
    f <- submitMulti [fundingSecuredBank, starkIndustries, acmeBank] [] do
        createCmd Facility with
            dealId = ca
            lender = fundingSecuredBank
            borrower = starkIndustries
            agent = acmeBank
            facilityType = "Revolver"
            facilityName = "Revolver Facility"
            facilityGlobalCommitment = 100000000.00
            facilityHostBankCommitment = 15000000.00
            facilityStartDate = date 2024 Jan 14
            facilityExpiryDate = date 2026 Jan 14
            facilityMaturityDate = date 2027 Jan 1

     -- Add the facility to the Deal
    caWithFacility <- submit fundingSecuredBank do
      exerciseCmd ca (AddFacility f)

       -- lending bank signs the commitment letter
    caSignLetter <- submit fundingSecuredBank do 
      exerciseCmd caWithFacility SignCommitmentLetter

    -- borrower countersigns letter
    caCountersignLetter <- submit starkIndustries do
      exerciseCmd caSignLetter AcceptCommitmentLetter

    -- lending bank closes deal
    caClosed <- submit fundingSecuredBank do
      exerciseCmd caCountersignLetter CloseDeal
      
    return ()