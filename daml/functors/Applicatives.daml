module Applicatives where

import Daml.Script

print: Script()
print = script do
    let
        -- applicatives
            -- in this first example, shows 3 functions in a list, which gets applied to each element in the 2nd list after the applicative function (i.e. '<*>' shorthand which is an 'infix' function)
            -- returns [0,0,0,101,102,103,1,4,9] - a new array with each element multiplied by zero, then each element +100, then each element squared
        x = [(*0), (+100), (^2)] <*> [1,2,3]
            -- returns [3,4,6,8,4,5,5,6] - a new array with each element of the first array multiplied by each element of the second array, then each element of the first array added to each element of the second array
        y = [(*), (+)] <*> [1,2] <*> [3,4]
            -- returns [1,2,3,2,4,6,3,6,9] - a new array with each element of the first array multiplied by each element of the second array
        z = (*) <$> [1,2,3] <*> [1,2,3]

    debug x
    debug y
    debug z